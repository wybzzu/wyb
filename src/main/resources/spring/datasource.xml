<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
      http://www.springframework.org/schema/context
	  http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/tx 
      http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
      
    <context:component-scan base-package="com.huitu.hnsl.api"/>

    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="datasource"/>
    </bean>

    <!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage">
            <value>
                com.huitu.api.hnsl.dao
            </value>
        </property>
    </bean> -->
    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.huitu"/>
    </bean>

    <!-- MyBatis mapper and configuration-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="datasource" />
        <property name="configLocation">
            <value>classpath:config/mybatis-env-setting.xml</value>
        </property>
        <property name="mapperLocations">
            <list>
                <value>classpath*:mappers/**/*Mapper.xml</value>
            </list>
        </property>
    </bean>

    <!-- ===============END MyBATIS beans configuration ================== -->
    <!-- <bean id="datasource" class="org.springframework.jndi.JndiObjectFactoryBean" scope="singleton">
        <property name="jndiName" value="java:comp/env/jdbc/api.hnsl"/>
        <property name="resourceRef" value="true" />
    </bean>
     -->
    <bean id="datasource"   
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">   
		<property name="driverClassName">   
		<value>com.microsoft.sqlserver.jdbc.SQLServerDriver</value>   
		</property>   
		<property name="url">   
		<value>jdbc:sqlserver://218.202.69.253:1433;databaseName=YDDB1</value>
		</property>   
		<property name="username">   
		<value>sa</value>   
		</property>   
		<property name="password">   
		    <!--<value>sjzx@123</value>-->
            <value>Richway1</value>
		</property>   
	</bean>   
	
    
    
    <context:property-placeholder   location="classpath:/config/redis.properties"  ignore-unresolvable="true"/>

    <!-- redis 相关配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxWaitMillis" value="${redis.maxWait}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>

    <bean id="connectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
            p:hostName="${redis.host}" p:port="${redis.port}"
            >
<!--
            <property name="hostName" value="${redis.host}"></property>
            <property name="port" value="${redis.port}"></property>
            <property name="password" value=""></property>
            <property name="usePool" value="true"></property>
            <property name="poolConfig"  ref="jedisPoolConfig"></property>
-->
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="keySerializer">
            <bean  class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="hashKeySerializer">
            <bean  class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
    </bean>
    
    <import resource="classpath*:spring/beans/datasource-services.xml" />

</beans>